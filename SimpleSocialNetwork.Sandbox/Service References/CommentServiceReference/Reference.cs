//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SimpleSocialNetwork.Sandbox.CommentServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Comment", Namespace="http://schemas.datacontract.org/2004/07/SimpleSocialNetwork.Domain")]
    [System.SerializableAttribute()]
    public partial class Comment : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AuthorIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DatePostedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PostIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AuthorId {
            get {
                return this.AuthorIdField;
            }
            set {
                if ((this.AuthorIdField.Equals(value) != true)) {
                    this.AuthorIdField = value;
                    this.RaisePropertyChanged("AuthorId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DatePosted {
            get {
                return this.DatePostedField;
            }
            set {
                if ((this.DatePostedField.Equals(value) != true)) {
                    this.DatePostedField = value;
                    this.RaisePropertyChanged("DatePosted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PostId {
            get {
                return this.PostIdField;
            }
            set {
                if ((this.PostIdField.Equals(value) != true)) {
                    this.PostIdField = value;
                    this.RaisePropertyChanged("PostId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CommentServiceReference.ICommentService")]
    public interface ICommentService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseServiceOf_Comment/Add", ReplyAction="http://tempuri.org/IBaseServiceOf_Comment/AddResponse")]
        void Add(SimpleSocialNetwork.Sandbox.CommentServiceReference.Comment entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseServiceOf_Comment/Add", ReplyAction="http://tempuri.org/IBaseServiceOf_Comment/AddResponse")]
        System.Threading.Tasks.Task AddAsync(SimpleSocialNetwork.Sandbox.CommentServiceReference.Comment entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseServiceOf_Comment/Remove", ReplyAction="http://tempuri.org/IBaseServiceOf_Comment/RemoveResponse")]
        void Remove(SimpleSocialNetwork.Sandbox.CommentServiceReference.Comment entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseServiceOf_Comment/Remove", ReplyAction="http://tempuri.org/IBaseServiceOf_Comment/RemoveResponse")]
        System.Threading.Tasks.Task RemoveAsync(SimpleSocialNetwork.Sandbox.CommentServiceReference.Comment entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseServiceOf_Comment/Update", ReplyAction="http://tempuri.org/IBaseServiceOf_Comment/UpdateResponse")]
        void Update(SimpleSocialNetwork.Sandbox.CommentServiceReference.Comment entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseServiceOf_Comment/Update", ReplyAction="http://tempuri.org/IBaseServiceOf_Comment/UpdateResponse")]
        System.Threading.Tasks.Task UpdateAsync(SimpleSocialNetwork.Sandbox.CommentServiceReference.Comment entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseServiceOf_Comment/GetById", ReplyAction="http://tempuri.org/IBaseServiceOf_Comment/GetByIdResponse")]
        SimpleSocialNetwork.Sandbox.CommentServiceReference.Comment GetById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseServiceOf_Comment/GetById", ReplyAction="http://tempuri.org/IBaseServiceOf_Comment/GetByIdResponse")]
        System.Threading.Tasks.Task<SimpleSocialNetwork.Sandbox.CommentServiceReference.Comment> GetByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseServiceOf_Comment/GetAll", ReplyAction="http://tempuri.org/IBaseServiceOf_Comment/GetAllResponse")]
        System.Collections.Generic.List<SimpleSocialNetwork.Sandbox.CommentServiceReference.Comment> GetAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseServiceOf_Comment/GetAll", ReplyAction="http://tempuri.org/IBaseServiceOf_Comment/GetAllResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<SimpleSocialNetwork.Sandbox.CommentServiceReference.Comment>> GetAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommentService/GetByPostId", ReplyAction="http://tempuri.org/ICommentService/GetByPostIdResponse")]
        System.Collections.Generic.List<SimpleSocialNetwork.Sandbox.CommentServiceReference.Comment> GetByPostId(int postId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommentService/GetByPostId", ReplyAction="http://tempuri.org/ICommentService/GetByPostIdResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<SimpleSocialNetwork.Sandbox.CommentServiceReference.Comment>> GetByPostIdAsync(int postId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICommentServiceChannel : SimpleSocialNetwork.Sandbox.CommentServiceReference.ICommentService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CommentServiceClient : System.ServiceModel.ClientBase<SimpleSocialNetwork.Sandbox.CommentServiceReference.ICommentService>, SimpleSocialNetwork.Sandbox.CommentServiceReference.ICommentService {
        
        public CommentServiceClient() {
        }
        
        public CommentServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CommentServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CommentServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CommentServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void Add(SimpleSocialNetwork.Sandbox.CommentServiceReference.Comment entity) {
            base.Channel.Add(entity);
        }
        
        public System.Threading.Tasks.Task AddAsync(SimpleSocialNetwork.Sandbox.CommentServiceReference.Comment entity) {
            return base.Channel.AddAsync(entity);
        }
        
        public void Remove(SimpleSocialNetwork.Sandbox.CommentServiceReference.Comment entity) {
            base.Channel.Remove(entity);
        }
        
        public System.Threading.Tasks.Task RemoveAsync(SimpleSocialNetwork.Sandbox.CommentServiceReference.Comment entity) {
            return base.Channel.RemoveAsync(entity);
        }
        
        public void Update(SimpleSocialNetwork.Sandbox.CommentServiceReference.Comment entity) {
            base.Channel.Update(entity);
        }
        
        public System.Threading.Tasks.Task UpdateAsync(SimpleSocialNetwork.Sandbox.CommentServiceReference.Comment entity) {
            return base.Channel.UpdateAsync(entity);
        }
        
        public SimpleSocialNetwork.Sandbox.CommentServiceReference.Comment GetById(int id) {
            return base.Channel.GetById(id);
        }
        
        public System.Threading.Tasks.Task<SimpleSocialNetwork.Sandbox.CommentServiceReference.Comment> GetByIdAsync(int id) {
            return base.Channel.GetByIdAsync(id);
        }
        
        public System.Collections.Generic.List<SimpleSocialNetwork.Sandbox.CommentServiceReference.Comment> GetAll() {
            return base.Channel.GetAll();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<SimpleSocialNetwork.Sandbox.CommentServiceReference.Comment>> GetAllAsync() {
            return base.Channel.GetAllAsync();
        }
        
        public System.Collections.Generic.List<SimpleSocialNetwork.Sandbox.CommentServiceReference.Comment> GetByPostId(int postId) {
            return base.Channel.GetByPostId(postId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<SimpleSocialNetwork.Sandbox.CommentServiceReference.Comment>> GetByPostIdAsync(int postId) {
            return base.Channel.GetByPostIdAsync(postId);
        }
    }
}
