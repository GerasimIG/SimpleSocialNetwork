//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SimpleSocialNetwork.WebUI.LocationServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LocationDto", Namespace="http://schemas.datacontract.org/2004/07/SimpleSocialNetwork.BusinessServices")]
    [System.SerializableAttribute()]
    public partial class LocationDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RegionNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CityName {
            get {
                return this.CityNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CityNameField, value) != true)) {
                    this.CityNameField = value;
                    this.RaisePropertyChanged("CityName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CountryCode {
            get {
                return this.CountryCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryCodeField, value) != true)) {
                    this.CountryCodeField = value;
                    this.RaisePropertyChanged("CountryCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CountryName {
            get {
                return this.CountryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryNameField, value) != true)) {
                    this.CountryNameField = value;
                    this.RaisePropertyChanged("CountryName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RegionName {
            get {
                return this.RegionNameField;
            }
            set {
                if ((object.ReferenceEquals(this.RegionNameField, value) != true)) {
                    this.RegionNameField = value;
                    this.RaisePropertyChanged("RegionName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="LocationServiceReference.ILocationService")]
    public interface ILocationService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseServiceOf_Location_LocationDto/Add", ReplyAction="http://tempuri.org/IBaseServiceOf_Location_LocationDto/AddResponse")]
        void Add(SimpleSocialNetwork.WebUI.LocationServiceReference.LocationDto entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseServiceOf_Location_LocationDto/Add", ReplyAction="http://tempuri.org/IBaseServiceOf_Location_LocationDto/AddResponse")]
        System.Threading.Tasks.Task AddAsync(SimpleSocialNetwork.WebUI.LocationServiceReference.LocationDto entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseServiceOf_Location_LocationDto/Remove", ReplyAction="http://tempuri.org/IBaseServiceOf_Location_LocationDto/RemoveResponse")]
        void Remove(SimpleSocialNetwork.WebUI.LocationServiceReference.LocationDto entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseServiceOf_Location_LocationDto/Remove", ReplyAction="http://tempuri.org/IBaseServiceOf_Location_LocationDto/RemoveResponse")]
        System.Threading.Tasks.Task RemoveAsync(SimpleSocialNetwork.WebUI.LocationServiceReference.LocationDto entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseServiceOf_Location_LocationDto/RemoveById", ReplyAction="http://tempuri.org/IBaseServiceOf_Location_LocationDto/RemoveByIdResponse")]
        void RemoveById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseServiceOf_Location_LocationDto/RemoveById", ReplyAction="http://tempuri.org/IBaseServiceOf_Location_LocationDto/RemoveByIdResponse")]
        System.Threading.Tasks.Task RemoveByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseServiceOf_Location_LocationDto/Update", ReplyAction="http://tempuri.org/IBaseServiceOf_Location_LocationDto/UpdateResponse")]
        void Update(SimpleSocialNetwork.WebUI.LocationServiceReference.LocationDto entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseServiceOf_Location_LocationDto/Update", ReplyAction="http://tempuri.org/IBaseServiceOf_Location_LocationDto/UpdateResponse")]
        System.Threading.Tasks.Task UpdateAsync(SimpleSocialNetwork.WebUI.LocationServiceReference.LocationDto entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseServiceOf_Location_LocationDto/GetById", ReplyAction="http://tempuri.org/IBaseServiceOf_Location_LocationDto/GetByIdResponse")]
        SimpleSocialNetwork.WebUI.LocationServiceReference.LocationDto GetById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseServiceOf_Location_LocationDto/GetById", ReplyAction="http://tempuri.org/IBaseServiceOf_Location_LocationDto/GetByIdResponse")]
        System.Threading.Tasks.Task<SimpleSocialNetwork.WebUI.LocationServiceReference.LocationDto> GetByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseServiceOf_Location_LocationDto/GetAll", ReplyAction="http://tempuri.org/IBaseServiceOf_Location_LocationDto/GetAllResponse")]
        System.Collections.Generic.List<SimpleSocialNetwork.WebUI.LocationServiceReference.LocationDto> GetAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseServiceOf_Location_LocationDto/GetAll", ReplyAction="http://tempuri.org/IBaseServiceOf_Location_LocationDto/GetAllResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<SimpleSocialNetwork.WebUI.LocationServiceReference.LocationDto>> GetAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILocationService/GetLocationsByCityTerm", ReplyAction="http://tempuri.org/ILocationService/GetLocationsByCityTermResponse")]
        System.Collections.Generic.List<SimpleSocialNetwork.WebUI.LocationServiceReference.LocationDto> GetLocationsByCityTerm(string term, int quantity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILocationService/GetLocationsByCityTerm", ReplyAction="http://tempuri.org/ILocationService/GetLocationsByCityTermResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<SimpleSocialNetwork.WebUI.LocationServiceReference.LocationDto>> GetLocationsByCityTermAsync(string term, int quantity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILocationService/GetCountries", ReplyAction="http://tempuri.org/ILocationService/GetCountriesResponse")]
        System.Collections.Generic.List<string> GetCountries();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILocationService/GetCountries", ReplyAction="http://tempuri.org/ILocationService/GetCountriesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<string>> GetCountriesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILocationService/GetRegionsByCountryName", ReplyAction="http://tempuri.org/ILocationService/GetRegionsByCountryNameResponse")]
        System.Collections.Generic.List<string> GetRegionsByCountryName(string countryName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILocationService/GetRegionsByCountryName", ReplyAction="http://tempuri.org/ILocationService/GetRegionsByCountryNameResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<string>> GetRegionsByCountryNameAsync(string countryName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILocationService/GetCitiesByRegionName", ReplyAction="http://tempuri.org/ILocationService/GetCitiesByRegionNameResponse")]
        System.Collections.Generic.List<string> GetCitiesByRegionName(string regionName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILocationService/GetCitiesByRegionName", ReplyAction="http://tempuri.org/ILocationService/GetCitiesByRegionNameResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<string>> GetCitiesByRegionNameAsync(string regionName);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILocationServiceChannel : SimpleSocialNetwork.WebUI.LocationServiceReference.ILocationService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LocationServiceClient : System.ServiceModel.ClientBase<SimpleSocialNetwork.WebUI.LocationServiceReference.ILocationService>, SimpleSocialNetwork.WebUI.LocationServiceReference.ILocationService {
        
        public LocationServiceClient() {
        }
        
        public LocationServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public LocationServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LocationServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LocationServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void Add(SimpleSocialNetwork.WebUI.LocationServiceReference.LocationDto entity) {
            base.Channel.Add(entity);
        }
        
        public System.Threading.Tasks.Task AddAsync(SimpleSocialNetwork.WebUI.LocationServiceReference.LocationDto entity) {
            return base.Channel.AddAsync(entity);
        }
        
        public void Remove(SimpleSocialNetwork.WebUI.LocationServiceReference.LocationDto entity) {
            base.Channel.Remove(entity);
        }
        
        public System.Threading.Tasks.Task RemoveAsync(SimpleSocialNetwork.WebUI.LocationServiceReference.LocationDto entity) {
            return base.Channel.RemoveAsync(entity);
        }
        
        public void RemoveById(int id) {
            base.Channel.RemoveById(id);
        }
        
        public System.Threading.Tasks.Task RemoveByIdAsync(int id) {
            return base.Channel.RemoveByIdAsync(id);
        }
        
        public void Update(SimpleSocialNetwork.WebUI.LocationServiceReference.LocationDto entity) {
            base.Channel.Update(entity);
        }
        
        public System.Threading.Tasks.Task UpdateAsync(SimpleSocialNetwork.WebUI.LocationServiceReference.LocationDto entity) {
            return base.Channel.UpdateAsync(entity);
        }
        
        public SimpleSocialNetwork.WebUI.LocationServiceReference.LocationDto GetById(int id) {
            return base.Channel.GetById(id);
        }
        
        public System.Threading.Tasks.Task<SimpleSocialNetwork.WebUI.LocationServiceReference.LocationDto> GetByIdAsync(int id) {
            return base.Channel.GetByIdAsync(id);
        }
        
        public System.Collections.Generic.List<SimpleSocialNetwork.WebUI.LocationServiceReference.LocationDto> GetAll() {
            return base.Channel.GetAll();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<SimpleSocialNetwork.WebUI.LocationServiceReference.LocationDto>> GetAllAsync() {
            return base.Channel.GetAllAsync();
        }
        
        public System.Collections.Generic.List<SimpleSocialNetwork.WebUI.LocationServiceReference.LocationDto> GetLocationsByCityTerm(string term, int quantity) {
            return base.Channel.GetLocationsByCityTerm(term, quantity);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<SimpleSocialNetwork.WebUI.LocationServiceReference.LocationDto>> GetLocationsByCityTermAsync(string term, int quantity) {
            return base.Channel.GetLocationsByCityTermAsync(term, quantity);
        }
        
        public System.Collections.Generic.List<string> GetCountries() {
            return base.Channel.GetCountries();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<string>> GetCountriesAsync() {
            return base.Channel.GetCountriesAsync();
        }
        
        public System.Collections.Generic.List<string> GetRegionsByCountryName(string countryName) {
            return base.Channel.GetRegionsByCountryName(countryName);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<string>> GetRegionsByCountryNameAsync(string countryName) {
            return base.Channel.GetRegionsByCountryNameAsync(countryName);
        }
        
        public System.Collections.Generic.List<string> GetCitiesByRegionName(string regionName) {
            return base.Channel.GetCitiesByRegionName(regionName);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<string>> GetCitiesByRegionNameAsync(string regionName) {
            return base.Channel.GetCitiesByRegionNameAsync(regionName);
        }
    }
}
