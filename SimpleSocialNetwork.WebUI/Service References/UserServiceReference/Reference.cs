//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SimpleSocialNetwork.WebUI.UserServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserDto", Namespace="http://schemas.datacontract.org/2004/07/SimpleSocialNetwork.BusinessServices")]
    [System.SerializableAttribute()]
    public partial class UserDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> BirthdayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FullLocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte GenderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] ImageDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImageMimeTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> LocationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RoleIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RoleNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SkypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Birthday {
            get {
                return this.BirthdayField;
            }
            set {
                if ((this.BirthdayField.Equals(value) != true)) {
                    this.BirthdayField = value;
                    this.RaisePropertyChanged("Birthday");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FullLocation {
            get {
                return this.FullLocationField;
            }
            set {
                if ((object.ReferenceEquals(this.FullLocationField, value) != true)) {
                    this.FullLocationField = value;
                    this.RaisePropertyChanged("FullLocation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte Gender {
            get {
                return this.GenderField;
            }
            set {
                if ((this.GenderField.Equals(value) != true)) {
                    this.GenderField = value;
                    this.RaisePropertyChanged("Gender");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] ImageData {
            get {
                return this.ImageDataField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageDataField, value) != true)) {
                    this.ImageDataField = value;
                    this.RaisePropertyChanged("ImageData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ImageMimeType {
            get {
                return this.ImageMimeTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageMimeTypeField, value) != true)) {
                    this.ImageMimeTypeField = value;
                    this.RaisePropertyChanged("ImageMimeType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> LocationId {
            get {
                return this.LocationIdField;
            }
            set {
                if ((this.LocationIdField.Equals(value) != true)) {
                    this.LocationIdField = value;
                    this.RaisePropertyChanged("LocationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((this.PasswordField.Equals(value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhoneNumber {
            get {
                return this.PhoneNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneNumberField, value) != true)) {
                    this.PhoneNumberField = value;
                    this.RaisePropertyChanged("PhoneNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RoleId {
            get {
                return this.RoleIdField;
            }
            set {
                if ((this.RoleIdField.Equals(value) != true)) {
                    this.RoleIdField = value;
                    this.RaisePropertyChanged("RoleId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RoleName {
            get {
                return this.RoleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.RoleNameField, value) != true)) {
                    this.RoleNameField = value;
                    this.RaisePropertyChanged("RoleName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Skype {
            get {
                return this.SkypeField;
            }
            set {
                if ((object.ReferenceEquals(this.SkypeField, value) != true)) {
                    this.SkypeField = value;
                    this.RaisePropertyChanged("Skype");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="UserServiceReference.IUserService")]
    public interface IUserService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseServiceOf_User_UserDto/Add", ReplyAction="http://tempuri.org/IBaseServiceOf_User_UserDto/AddResponse")]
        void Add(SimpleSocialNetwork.WebUI.UserServiceReference.UserDto entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseServiceOf_User_UserDto/Add", ReplyAction="http://tempuri.org/IBaseServiceOf_User_UserDto/AddResponse")]
        System.Threading.Tasks.Task AddAsync(SimpleSocialNetwork.WebUI.UserServiceReference.UserDto entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseServiceOf_User_UserDto/Remove", ReplyAction="http://tempuri.org/IBaseServiceOf_User_UserDto/RemoveResponse")]
        void Remove(SimpleSocialNetwork.WebUI.UserServiceReference.UserDto entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseServiceOf_User_UserDto/Remove", ReplyAction="http://tempuri.org/IBaseServiceOf_User_UserDto/RemoveResponse")]
        System.Threading.Tasks.Task RemoveAsync(SimpleSocialNetwork.WebUI.UserServiceReference.UserDto entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseServiceOf_User_UserDto/RemoveById", ReplyAction="http://tempuri.org/IBaseServiceOf_User_UserDto/RemoveByIdResponse")]
        void RemoveById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseServiceOf_User_UserDto/RemoveById", ReplyAction="http://tempuri.org/IBaseServiceOf_User_UserDto/RemoveByIdResponse")]
        System.Threading.Tasks.Task RemoveByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseServiceOf_User_UserDto/Update", ReplyAction="http://tempuri.org/IBaseServiceOf_User_UserDto/UpdateResponse")]
        void Update(SimpleSocialNetwork.WebUI.UserServiceReference.UserDto entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseServiceOf_User_UserDto/Update", ReplyAction="http://tempuri.org/IBaseServiceOf_User_UserDto/UpdateResponse")]
        System.Threading.Tasks.Task UpdateAsync(SimpleSocialNetwork.WebUI.UserServiceReference.UserDto entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseServiceOf_User_UserDto/GetById", ReplyAction="http://tempuri.org/IBaseServiceOf_User_UserDto/GetByIdResponse")]
        SimpleSocialNetwork.WebUI.UserServiceReference.UserDto GetById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseServiceOf_User_UserDto/GetById", ReplyAction="http://tempuri.org/IBaseServiceOf_User_UserDto/GetByIdResponse")]
        System.Threading.Tasks.Task<SimpleSocialNetwork.WebUI.UserServiceReference.UserDto> GetByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseServiceOf_User_UserDto/GetAll", ReplyAction="http://tempuri.org/IBaseServiceOf_User_UserDto/GetAllResponse")]
        System.Collections.Generic.List<SimpleSocialNetwork.WebUI.UserServiceReference.UserDto> GetAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseServiceOf_User_UserDto/GetAll", ReplyAction="http://tempuri.org/IBaseServiceOf_User_UserDto/GetAllResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<SimpleSocialNetwork.WebUI.UserServiceReference.UserDto>> GetAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetUserByEmail", ReplyAction="http://tempuri.org/IUserService/GetUserByEmailResponse")]
        SimpleSocialNetwork.WebUI.UserServiceReference.UserDto GetUserByEmail(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetUserByEmail", ReplyAction="http://tempuri.org/IUserService/GetUserByEmailResponse")]
        System.Threading.Tasks.Task<SimpleSocialNetwork.WebUI.UserServiceReference.UserDto> GetUserByEmailAsync(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/CreateUser", ReplyAction="http://tempuri.org/IUserService/CreateUserResponse")]
        bool CreateUser(SimpleSocialNetwork.WebUI.UserServiceReference.UserDto newUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/CreateUser", ReplyAction="http://tempuri.org/IUserService/CreateUserResponse")]
        System.Threading.Tasks.Task<bool> CreateUserAsync(SimpleSocialNetwork.WebUI.UserServiceReference.UserDto newUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetUsersByParams", ReplyAction="http://tempuri.org/IUserService/GetUsersByParamsResponse")]
        System.Collections.Generic.List<SimpleSocialNetwork.WebUI.UserServiceReference.UserDto> GetUsersByParams(string userName, string country, string region, string city, int gender, System.Nullable<System.DateTime> birthDateFrom, System.Nullable<System.DateTime> birthDateTo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetUsersByParams", ReplyAction="http://tempuri.org/IUserService/GetUsersByParamsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<SimpleSocialNetwork.WebUI.UserServiceReference.UserDto>> GetUsersByParamsAsync(string userName, string country, string region, string city, int gender, System.Nullable<System.DateTime> birthDateFrom, System.Nullable<System.DateTime> birthDateTo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/UpdateEmail", ReplyAction="http://tempuri.org/IUserService/UpdateEmailResponse")]
        bool UpdateEmail(string newEmail, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/UpdateEmail", ReplyAction="http://tempuri.org/IUserService/UpdateEmailResponse")]
        System.Threading.Tasks.Task<bool> UpdateEmailAsync(string newEmail, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/UpdatePassword", ReplyAction="http://tempuri.org/IUserService/UpdatePasswordResponse")]
        bool UpdatePassword(System.Guid newPassword, System.Guid oldPassword, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/UpdatePassword", ReplyAction="http://tempuri.org/IUserService/UpdatePasswordResponse")]
        System.Threading.Tasks.Task<bool> UpdatePasswordAsync(System.Guid newPassword, System.Guid oldPassword, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/UpdateImage", ReplyAction="http://tempuri.org/IUserService/UpdateImageResponse")]
        bool UpdateImage(byte[] imageData, string imageMimeType, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/UpdateImage", ReplyAction="http://tempuri.org/IUserService/UpdateImageResponse")]
        System.Threading.Tasks.Task<bool> UpdateImageAsync(byte[] imageData, string imageMimeType, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetRandomUsers", ReplyAction="http://tempuri.org/IUserService/GetRandomUsersResponse")]
        System.Collections.Generic.List<SimpleSocialNetwork.WebUI.UserServiceReference.UserDto> GetRandomUsers(int quantity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetRandomUsers", ReplyAction="http://tempuri.org/IUserService/GetRandomUsersResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<SimpleSocialNetwork.WebUI.UserServiceReference.UserDto>> GetRandomUsersAsync(int quantity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetUserByRoleId", ReplyAction="http://tempuri.org/IUserService/GetUserByRoleIdResponse")]
        System.Collections.Generic.List<SimpleSocialNetwork.WebUI.UserServiceReference.UserDto> GetUserByRoleId(int roleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetUserByRoleId", ReplyAction="http://tempuri.org/IUserService/GetUserByRoleIdResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<SimpleSocialNetwork.WebUI.UserServiceReference.UserDto>> GetUserByRoleIdAsync(int roleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/UpdateUser", ReplyAction="http://tempuri.org/IUserService/UpdateUserResponse")]
        bool UpdateUser(SimpleSocialNetwork.WebUI.UserServiceReference.UserDto user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/UpdateUser", ReplyAction="http://tempuri.org/IUserService/UpdateUserResponse")]
        System.Threading.Tasks.Task<bool> UpdateUserAsync(SimpleSocialNetwork.WebUI.UserServiceReference.UserDto user);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IUserServiceChannel : SimpleSocialNetwork.WebUI.UserServiceReference.IUserService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UserServiceClient : System.ServiceModel.ClientBase<SimpleSocialNetwork.WebUI.UserServiceReference.IUserService>, SimpleSocialNetwork.WebUI.UserServiceReference.IUserService {
        
        public UserServiceClient() {
        }
        
        public UserServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public UserServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void Add(SimpleSocialNetwork.WebUI.UserServiceReference.UserDto entity) {
            base.Channel.Add(entity);
        }
        
        public System.Threading.Tasks.Task AddAsync(SimpleSocialNetwork.WebUI.UserServiceReference.UserDto entity) {
            return base.Channel.AddAsync(entity);
        }
        
        public void Remove(SimpleSocialNetwork.WebUI.UserServiceReference.UserDto entity) {
            base.Channel.Remove(entity);
        }
        
        public System.Threading.Tasks.Task RemoveAsync(SimpleSocialNetwork.WebUI.UserServiceReference.UserDto entity) {
            return base.Channel.RemoveAsync(entity);
        }
        
        public void RemoveById(int id) {
            base.Channel.RemoveById(id);
        }
        
        public System.Threading.Tasks.Task RemoveByIdAsync(int id) {
            return base.Channel.RemoveByIdAsync(id);
        }
        
        public void Update(SimpleSocialNetwork.WebUI.UserServiceReference.UserDto entity) {
            base.Channel.Update(entity);
        }
        
        public System.Threading.Tasks.Task UpdateAsync(SimpleSocialNetwork.WebUI.UserServiceReference.UserDto entity) {
            return base.Channel.UpdateAsync(entity);
        }
        
        public SimpleSocialNetwork.WebUI.UserServiceReference.UserDto GetById(int id) {
            return base.Channel.GetById(id);
        }
        
        public System.Threading.Tasks.Task<SimpleSocialNetwork.WebUI.UserServiceReference.UserDto> GetByIdAsync(int id) {
            return base.Channel.GetByIdAsync(id);
        }
        
        public System.Collections.Generic.List<SimpleSocialNetwork.WebUI.UserServiceReference.UserDto> GetAll() {
            return base.Channel.GetAll();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<SimpleSocialNetwork.WebUI.UserServiceReference.UserDto>> GetAllAsync() {
            return base.Channel.GetAllAsync();
        }
        
        public SimpleSocialNetwork.WebUI.UserServiceReference.UserDto GetUserByEmail(string email) {
            return base.Channel.GetUserByEmail(email);
        }
        
        public System.Threading.Tasks.Task<SimpleSocialNetwork.WebUI.UserServiceReference.UserDto> GetUserByEmailAsync(string email) {
            return base.Channel.GetUserByEmailAsync(email);
        }
        
        public bool CreateUser(SimpleSocialNetwork.WebUI.UserServiceReference.UserDto newUser) {
            return base.Channel.CreateUser(newUser);
        }
        
        public System.Threading.Tasks.Task<bool> CreateUserAsync(SimpleSocialNetwork.WebUI.UserServiceReference.UserDto newUser) {
            return base.Channel.CreateUserAsync(newUser);
        }
        
        public System.Collections.Generic.List<SimpleSocialNetwork.WebUI.UserServiceReference.UserDto> GetUsersByParams(string userName, string country, string region, string city, int gender, System.Nullable<System.DateTime> birthDateFrom, System.Nullable<System.DateTime> birthDateTo) {
            return base.Channel.GetUsersByParams(userName, country, region, city, gender, birthDateFrom, birthDateTo);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<SimpleSocialNetwork.WebUI.UserServiceReference.UserDto>> GetUsersByParamsAsync(string userName, string country, string region, string city, int gender, System.Nullable<System.DateTime> birthDateFrom, System.Nullable<System.DateTime> birthDateTo) {
            return base.Channel.GetUsersByParamsAsync(userName, country, region, city, gender, birthDateFrom, birthDateTo);
        }
        
        public bool UpdateEmail(string newEmail, int userId) {
            return base.Channel.UpdateEmail(newEmail, userId);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateEmailAsync(string newEmail, int userId) {
            return base.Channel.UpdateEmailAsync(newEmail, userId);
        }
        
        public bool UpdatePassword(System.Guid newPassword, System.Guid oldPassword, int userId) {
            return base.Channel.UpdatePassword(newPassword, oldPassword, userId);
        }
        
        public System.Threading.Tasks.Task<bool> UpdatePasswordAsync(System.Guid newPassword, System.Guid oldPassword, int userId) {
            return base.Channel.UpdatePasswordAsync(newPassword, oldPassword, userId);
        }
        
        public bool UpdateImage(byte[] imageData, string imageMimeType, int userId) {
            return base.Channel.UpdateImage(imageData, imageMimeType, userId);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateImageAsync(byte[] imageData, string imageMimeType, int userId) {
            return base.Channel.UpdateImageAsync(imageData, imageMimeType, userId);
        }
        
        public System.Collections.Generic.List<SimpleSocialNetwork.WebUI.UserServiceReference.UserDto> GetRandomUsers(int quantity) {
            return base.Channel.GetRandomUsers(quantity);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<SimpleSocialNetwork.WebUI.UserServiceReference.UserDto>> GetRandomUsersAsync(int quantity) {
            return base.Channel.GetRandomUsersAsync(quantity);
        }
        
        public System.Collections.Generic.List<SimpleSocialNetwork.WebUI.UserServiceReference.UserDto> GetUserByRoleId(int roleId) {
            return base.Channel.GetUserByRoleId(roleId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<SimpleSocialNetwork.WebUI.UserServiceReference.UserDto>> GetUserByRoleIdAsync(int roleId) {
            return base.Channel.GetUserByRoleIdAsync(roleId);
        }
        
        public bool UpdateUser(SimpleSocialNetwork.WebUI.UserServiceReference.UserDto user) {
            return base.Channel.UpdateUser(user);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateUserAsync(SimpleSocialNetwork.WebUI.UserServiceReference.UserDto user) {
            return base.Channel.UpdateUserAsync(user);
        }
    }
}
