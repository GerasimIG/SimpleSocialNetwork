//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SimpleSocialNetwork.WebUI.FriendServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FriendDto", Namespace="http://schemas.datacontract.org/2004/07/SimpleSocialNetwork.BusinessServices")]
    [System.SerializableAttribute()]
    public partial class FriendDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FirstUserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SecondUserIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FirstUserId {
            get {
                return this.FirstUserIdField;
            }
            set {
                if ((this.FirstUserIdField.Equals(value) != true)) {
                    this.FirstUserIdField = value;
                    this.RaisePropertyChanged("FirstUserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SecondUserId {
            get {
                return this.SecondUserIdField;
            }
            set {
                if ((this.SecondUserIdField.Equals(value) != true)) {
                    this.SecondUserIdField = value;
                    this.RaisePropertyChanged("SecondUserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserDto", Namespace="http://schemas.datacontract.org/2004/07/SimpleSocialNetwork.BusinessServices")]
    [System.SerializableAttribute()]
    public partial class UserDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> BirthdayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FullLocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte GenderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] ImageDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImageMimeTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> LocationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RoleIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RoleNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SkypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Birthday {
            get {
                return this.BirthdayField;
            }
            set {
                if ((this.BirthdayField.Equals(value) != true)) {
                    this.BirthdayField = value;
                    this.RaisePropertyChanged("Birthday");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FullLocation {
            get {
                return this.FullLocationField;
            }
            set {
                if ((object.ReferenceEquals(this.FullLocationField, value) != true)) {
                    this.FullLocationField = value;
                    this.RaisePropertyChanged("FullLocation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte Gender {
            get {
                return this.GenderField;
            }
            set {
                if ((this.GenderField.Equals(value) != true)) {
                    this.GenderField = value;
                    this.RaisePropertyChanged("Gender");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] ImageData {
            get {
                return this.ImageDataField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageDataField, value) != true)) {
                    this.ImageDataField = value;
                    this.RaisePropertyChanged("ImageData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ImageMimeType {
            get {
                return this.ImageMimeTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageMimeTypeField, value) != true)) {
                    this.ImageMimeTypeField = value;
                    this.RaisePropertyChanged("ImageMimeType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> LocationId {
            get {
                return this.LocationIdField;
            }
            set {
                if ((this.LocationIdField.Equals(value) != true)) {
                    this.LocationIdField = value;
                    this.RaisePropertyChanged("LocationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((this.PasswordField.Equals(value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhoneNumber {
            get {
                return this.PhoneNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneNumberField, value) != true)) {
                    this.PhoneNumberField = value;
                    this.RaisePropertyChanged("PhoneNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RoleId {
            get {
                return this.RoleIdField;
            }
            set {
                if ((this.RoleIdField.Equals(value) != true)) {
                    this.RoleIdField = value;
                    this.RaisePropertyChanged("RoleId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RoleName {
            get {
                return this.RoleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.RoleNameField, value) != true)) {
                    this.RoleNameField = value;
                    this.RaisePropertyChanged("RoleName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Skype {
            get {
                return this.SkypeField;
            }
            set {
                if ((object.ReferenceEquals(this.SkypeField, value) != true)) {
                    this.SkypeField = value;
                    this.RaisePropertyChanged("Skype");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="FriendServiceReference.IFriendService")]
    public interface IFriendService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseServiceOf_Friend_FriendDto/Add", ReplyAction="http://tempuri.org/IBaseServiceOf_Friend_FriendDto/AddResponse")]
        void Add(SimpleSocialNetwork.WebUI.FriendServiceReference.FriendDto entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseServiceOf_Friend_FriendDto/Add", ReplyAction="http://tempuri.org/IBaseServiceOf_Friend_FriendDto/AddResponse")]
        System.Threading.Tasks.Task AddAsync(SimpleSocialNetwork.WebUI.FriendServiceReference.FriendDto entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseServiceOf_Friend_FriendDto/Remove", ReplyAction="http://tempuri.org/IBaseServiceOf_Friend_FriendDto/RemoveResponse")]
        void Remove(SimpleSocialNetwork.WebUI.FriendServiceReference.FriendDto entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseServiceOf_Friend_FriendDto/Remove", ReplyAction="http://tempuri.org/IBaseServiceOf_Friend_FriendDto/RemoveResponse")]
        System.Threading.Tasks.Task RemoveAsync(SimpleSocialNetwork.WebUI.FriendServiceReference.FriendDto entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseServiceOf_Friend_FriendDto/RemoveById", ReplyAction="http://tempuri.org/IBaseServiceOf_Friend_FriendDto/RemoveByIdResponse")]
        void RemoveById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseServiceOf_Friend_FriendDto/RemoveById", ReplyAction="http://tempuri.org/IBaseServiceOf_Friend_FriendDto/RemoveByIdResponse")]
        System.Threading.Tasks.Task RemoveByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseServiceOf_Friend_FriendDto/Update", ReplyAction="http://tempuri.org/IBaseServiceOf_Friend_FriendDto/UpdateResponse")]
        void Update(SimpleSocialNetwork.WebUI.FriendServiceReference.FriendDto entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseServiceOf_Friend_FriendDto/Update", ReplyAction="http://tempuri.org/IBaseServiceOf_Friend_FriendDto/UpdateResponse")]
        System.Threading.Tasks.Task UpdateAsync(SimpleSocialNetwork.WebUI.FriendServiceReference.FriendDto entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseServiceOf_Friend_FriendDto/GetById", ReplyAction="http://tempuri.org/IBaseServiceOf_Friend_FriendDto/GetByIdResponse")]
        SimpleSocialNetwork.WebUI.FriendServiceReference.FriendDto GetById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseServiceOf_Friend_FriendDto/GetById", ReplyAction="http://tempuri.org/IBaseServiceOf_Friend_FriendDto/GetByIdResponse")]
        System.Threading.Tasks.Task<SimpleSocialNetwork.WebUI.FriendServiceReference.FriendDto> GetByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseServiceOf_Friend_FriendDto/GetAll", ReplyAction="http://tempuri.org/IBaseServiceOf_Friend_FriendDto/GetAllResponse")]
        System.Collections.Generic.List<SimpleSocialNetwork.WebUI.FriendServiceReference.FriendDto> GetAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseServiceOf_Friend_FriendDto/GetAll", ReplyAction="http://tempuri.org/IBaseServiceOf_Friend_FriendDto/GetAllResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<SimpleSocialNetwork.WebUI.FriendServiceReference.FriendDto>> GetAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFriendService/IsFriends", ReplyAction="http://tempuri.org/IFriendService/IsFriendsResponse")]
        bool IsFriends(int firstUserId, int secondUserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFriendService/IsFriends", ReplyAction="http://tempuri.org/IFriendService/IsFriendsResponse")]
        System.Threading.Tasks.Task<bool> IsFriendsAsync(int firstUserId, int secondUserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFriendService/GetFriendsByUserId", ReplyAction="http://tempuri.org/IFriendService/GetFriendsByUserIdResponse")]
        System.Collections.Generic.List<SimpleSocialNetwork.WebUI.FriendServiceReference.UserDto> GetFriendsByUserId(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFriendService/GetFriendsByUserId", ReplyAction="http://tempuri.org/IFriendService/GetFriendsByUserIdResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<SimpleSocialNetwork.WebUI.FriendServiceReference.UserDto>> GetFriendsByUserIdAsync(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFriendService/RemoveFriendship", ReplyAction="http://tempuri.org/IFriendService/RemoveFriendshipResponse")]
        void RemoveFriendship(int firstUserId, int secondUserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFriendService/RemoveFriendship", ReplyAction="http://tempuri.org/IFriendService/RemoveFriendshipResponse")]
        System.Threading.Tasks.Task RemoveFriendshipAsync(int firstUserId, int secondUserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFriendService/AddFriendship", ReplyAction="http://tempuri.org/IFriendService/AddFriendshipResponse")]
        void AddFriendship(int firstUserId, int secondUserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFriendService/AddFriendship", ReplyAction="http://tempuri.org/IFriendService/AddFriendshipResponse")]
        System.Threading.Tasks.Task AddFriendshipAsync(int firstUserId, int secondUserId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IFriendServiceChannel : SimpleSocialNetwork.WebUI.FriendServiceReference.IFriendService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FriendServiceClient : System.ServiceModel.ClientBase<SimpleSocialNetwork.WebUI.FriendServiceReference.IFriendService>, SimpleSocialNetwork.WebUI.FriendServiceReference.IFriendService {
        
        public FriendServiceClient() {
        }
        
        public FriendServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public FriendServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FriendServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FriendServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void Add(SimpleSocialNetwork.WebUI.FriendServiceReference.FriendDto entity) {
            base.Channel.Add(entity);
        }
        
        public System.Threading.Tasks.Task AddAsync(SimpleSocialNetwork.WebUI.FriendServiceReference.FriendDto entity) {
            return base.Channel.AddAsync(entity);
        }
        
        public void Remove(SimpleSocialNetwork.WebUI.FriendServiceReference.FriendDto entity) {
            base.Channel.Remove(entity);
        }
        
        public System.Threading.Tasks.Task RemoveAsync(SimpleSocialNetwork.WebUI.FriendServiceReference.FriendDto entity) {
            return base.Channel.RemoveAsync(entity);
        }
        
        public void RemoveById(int id) {
            base.Channel.RemoveById(id);
        }
        
        public System.Threading.Tasks.Task RemoveByIdAsync(int id) {
            return base.Channel.RemoveByIdAsync(id);
        }
        
        public void Update(SimpleSocialNetwork.WebUI.FriendServiceReference.FriendDto entity) {
            base.Channel.Update(entity);
        }
        
        public System.Threading.Tasks.Task UpdateAsync(SimpleSocialNetwork.WebUI.FriendServiceReference.FriendDto entity) {
            return base.Channel.UpdateAsync(entity);
        }
        
        public SimpleSocialNetwork.WebUI.FriendServiceReference.FriendDto GetById(int id) {
            return base.Channel.GetById(id);
        }
        
        public System.Threading.Tasks.Task<SimpleSocialNetwork.WebUI.FriendServiceReference.FriendDto> GetByIdAsync(int id) {
            return base.Channel.GetByIdAsync(id);
        }
        
        public System.Collections.Generic.List<SimpleSocialNetwork.WebUI.FriendServiceReference.FriendDto> GetAll() {
            return base.Channel.GetAll();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<SimpleSocialNetwork.WebUI.FriendServiceReference.FriendDto>> GetAllAsync() {
            return base.Channel.GetAllAsync();
        }
        
        public bool IsFriends(int firstUserId, int secondUserId) {
            return base.Channel.IsFriends(firstUserId, secondUserId);
        }
        
        public System.Threading.Tasks.Task<bool> IsFriendsAsync(int firstUserId, int secondUserId) {
            return base.Channel.IsFriendsAsync(firstUserId, secondUserId);
        }
        
        public System.Collections.Generic.List<SimpleSocialNetwork.WebUI.FriendServiceReference.UserDto> GetFriendsByUserId(int userId) {
            return base.Channel.GetFriendsByUserId(userId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<SimpleSocialNetwork.WebUI.FriendServiceReference.UserDto>> GetFriendsByUserIdAsync(int userId) {
            return base.Channel.GetFriendsByUserIdAsync(userId);
        }
        
        public void RemoveFriendship(int firstUserId, int secondUserId) {
            base.Channel.RemoveFriendship(firstUserId, secondUserId);
        }
        
        public System.Threading.Tasks.Task RemoveFriendshipAsync(int firstUserId, int secondUserId) {
            return base.Channel.RemoveFriendshipAsync(firstUserId, secondUserId);
        }
        
        public void AddFriendship(int firstUserId, int secondUserId) {
            base.Channel.AddFriendship(firstUserId, secondUserId);
        }
        
        public System.Threading.Tasks.Task AddFriendshipAsync(int firstUserId, int secondUserId) {
            return base.Channel.AddFriendshipAsync(firstUserId, secondUserId);
        }
    }
}
